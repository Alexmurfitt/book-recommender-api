import json
import os
import shutil

# üìÅ Ruta al archivo de libros
FILE_PATH = os.path.join(os.path.dirname(__file__), "..", "data", "books_openlibrary_enriched.json")
BACKUP_FILE = FILE_PATH.replace(".json", "_backup.json")

# üîí Validaci√≥n: asegurar que nuevos_libros es una lista PLANA de diccionarios
def validar_formato(libros):
    if not isinstance(libros, list):
        raise ValueError("‚ùå Error: 'nuevos_libros' debe ser una lista.")
    if any(isinstance(item, list) for item in libros):
        raise ValueError("‚ùå Error: 'nuevos_libros' contiene una lista anidada. Usa una lista plana de diccionarios.")
    if not all(isinstance(item, dict) for item in libros):
        raise ValueError("‚ùå Error: Todos los elementos de 'nuevos_libros' deben ser diccionarios.")

# üîπ Libros nuevos a insertar
nuevos_libros = [
  {
    "title": "Storytelling como estrategia de comunicaci√≥n",
    "author": "Guillaume Lamarre",
    "genres": ["Comunicaci√≥n", "Empresa"],
    "subgenres": ["Narrativa corporativa", "Marketing"],
    "themes": ["influencia", "mensaje", "persuasi√≥n"],
    "emotion_tags": ["claridad", "conexi√≥n", "curiosidad"],
    "tone": "profesional",
    "style": "did√°ctico",
    "age_range": "16+",
    "language": "es",
    "personality_match": ["Alta extraversi√≥n", "Alta apertura"],
    "year": 2019,
    "description": "Una gu√≠a para emplear t√©cnicas narrativas en la comunicaci√≥n empresarial y la conexi√≥n con la audiencia."
  },
  {
    "title": "Tecnofeudalismo",
    "author": "Yanis Varoufakis",
    "genres": ["Econom√≠a", "Tecnolog√≠a"],
    "subgenres": ["Cr√≠tica del capitalismo digital", "Pol√≠tica global"],
    "themes": ["poder digital", "explotaci√≥n", "sistemas econ√≥micos"],
    "emotion_tags": ["alerta", "reflexi√≥n", "urgencia"],
    "tone": "cr√≠tico",
    "style": "ensay√≠stico",
    "age_range": "18+",
    "language": "es",
    "personality_match": ["Alta apertura", "Alta racionalidad"],
    "year": 2023,
    "description": "Una denuncia del dominio de las grandes tecnol√≥gicas como una nueva forma de feudalismo global."
  },
  {
    "title": "Una breve historia de la econom√≠a",
    "author": "Niall Kishtainy",
    "genres": ["Econom√≠a", "Historia"],
    "subgenres": ["Divulgaci√≥n econ√≥mica", "Historia econ√≥mica"],
    "themes": ["mercado", "crisis", "pensamiento econ√≥mico"],
    "emotion_tags": ["curiosidad", "claridad", "aprendizaje"],
    "tone": "informativo",
    "style": "sint√©tico",
    "age_range": "14+",
    "language": "es",
    "personality_match": ["Alta apertura", "Alta conciencia"],
    "year": 2017,
    "description": "Un recorrido accesible por los momentos clave y las grandes ideas que han moldeado la econom√≠a moderna."
  },
  {
    "title": "Una breve historia de la igualdad",
    "author": "Thomas Piketty",
    "genres": ["Econom√≠a", "Historia"],
    "subgenres": ["Ensayo", "Historia social"],
    "themes": ["igualdad", "redistribuci√≥n", "progreso"],
    "emotion_tags": ["esperanza", "conciencia", "compromiso"],
    "tone": "optimista",
    "style": "ensay√≠stico",
    "age_range": "16+",
    "language": "es",
    "personality_match": ["Alta apertura", "Alta responsabilidad"],
    "year": 2021,
    "description": "Un ensayo que resume siglos de lucha por la igualdad y propone caminos para avanzar hacia sociedades m√°s justas."
  },
  {
    "title": "Un paso por delante de Wall Street",
    "author": "Peter Lynch",
    "genres": ["Finanzas", "Inversi√≥n"],
    "subgenres": ["Mercado de valores", "Inversi√≥n a largo plazo"],
    "themes": ["rentabilidad", "oportunidad", "an√°lisis financiero"],
    "emotion_tags": ["motivaci√≥n", "confianza", "ambici√≥n"],
    "tone": "pr√°ctico",
    "style": "experiencial",
    "age_range": "16+",
    "language": "es",
    "personality_match": ["Alta responsabilidad", "Alta racionalidad"],
    "year": 1989,
    "description": "Un cl√°sico de la inversi√≥n que ense√±a c√≥mo cualquier persona puede batir al mercado con conocimiento y disciplina."
  },
  {
    "title": "Walden",
    "author": "Henry David Thoreau",
    "genres": ["Filosof√≠a", "Naturaleza"],
    "subgenres": ["Vida simple", "Individualismo"],
    "themes": ["naturaleza", "soledad", "libertad"],
    "emotion_tags": ["paz", "reflexi√≥n", "contemplaci√≥n"],
    "tone": "sereno",
    "style": "ensay√≠stico-narrativo",
    "age_range": "16+",
    "language": "es",
    "personality_match": ["Alta apertura", "Alta introspecci√≥n"],
    "year": 1854,
    "description": "Una meditaci√≥n filos√≥fica sobre la autosuficiencia y la vida en armon√≠a con la naturaleza."
  },
  {
    "title": "Walden Dos",
    "author": "B. F. Skinner",
    "genres": ["Psicolog√≠a", "Ficci√≥n ut√≥pica"],
    "subgenres": ["Conductismo", "Sociedad ideal"],
    "themes": ["comportamiento", "utop√≠a", "organizaci√≥n social"],
    "emotion_tags": ["curiosidad", "desaf√≠o", "reflexi√≥n"],
    "tone": "experimental",
    "style": "narrativo-ensay√≠stico",
    "age_range": "16+",
    "language": "es",
    "personality_match": ["Alta apertura", "Alta racionalidad"],
    "year": 1948,
    "description": "Una novela que explora c√≥mo una comunidad basada en principios cient√≠ficos puede crear una sociedad m√°s feliz."
  },
  {
    "title": "Demian",
    "author": "Hermann Hesse",
    "genres": ["Filosof√≠a", "Ficci√≥n"],
    "subgenres": ["Bildungsroman", "Psicolog√≠a", "Existencialismo"],
    "themes": ["identidad", "dualidad", "b√∫squeda interior"],
    "emotion_tags": ["reflexi√≥n", "melancol√≠a", "inquietud"],
    "tone": "reflexivo",
    "style": "po√©tico",
    "age_range": "16+",
    "language": "es",
    "personality_match": ["Alta apertura", "Alta amabilidad"],
    "year": 1919,
    "description": "Una novela inici√°tica que explora la transformaci√≥n del alma a trav√©s del conflicto interno."
  }
]


# ‚úÖ Validar estructura de entrada
validar_formato(nuevos_libros)

# üîπ Cargar archivo actual
with open(FILE_PATH, "r", encoding="utf-8") as f:
    libros_existentes = json.load(f)

# üîÅ Aplanar si hay listas anidadas en el archivo (prevenci√≥n)
libros_existentes_flat = []
for item in libros_existentes:
    if isinstance(item, list):
        libros_existentes_flat.extend(item)
    elif isinstance(item, dict):
        libros_existentes_flat.append(item)

# üß† Crear conjunto de claves √∫nicas existentes
claves_existentes = set(
    (libro.get("title", "").strip().lower(), libro.get("author", "").strip().lower())
    for libro in libros_existentes_flat if isinstance(libro, dict)
)

# üîé Filtrar nuevos libros que no est√©n ya presentes
nuevos_libros_filtrados = []
for libro in nuevos_libros:
    clave = (libro.get("title", "").strip().lower(), libro.get("author", "").strip().lower())
    if clave not in claves_existentes:
        nuevos_libros_filtrados.append(libro)
        claves_existentes.add(clave)  # Evita duplicaci√≥n m√∫ltiple si script se ejecuta varias veces

# üì¶ Hacer backup antes de escribir
shutil.copy(FILE_PATH, BACKUP_FILE)
print(f"üõ°Ô∏è  Backup creado: {BACKUP_FILE}")

# ‚ûï A√±adir los libros filtrados
libros_final = libros_existentes_flat + nuevos_libros_filtrados

# üíæ Guardar el archivo actualizado
with open(FILE_PATH, "w", encoding="utf-8") as f:
    json.dump(libros_final, f, ensure_ascii=False, indent=4)

print(f"‚úÖ {len(nuevos_libros_filtrados)} libros nuevos a√±adidos.")
print(f"üìö Total actual: {len(libros_final)} libros.")
